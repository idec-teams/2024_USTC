{"version":3,"file":"notebook.js","mappings":";;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACPA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;ACjDA;AACA;AACA;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA","sources":["webpack://2024_ustc/./src/pages/notebook/notebook.js","webpack://2024_ustc/./src/pages/notebook/notebooktext.js","webpack://2024_ustc/./src/table/table.js","webpack://2024_ustc/./src/table/tablecontrol.js","webpack://2024_ustc/./src/table/table.eft","webpack://2024_ustc/./src/table/tableitem.eft","webpack://2024_ustc/./src/table/table.css?88f3"],"sourcesContent":["\r\nimport text from \"@pages/notebook/notebooktext.js\";\r\nimport textboxcreate from \"@src/textbox/textbox.js\";\r\nimport tableCreate from \"@src/table/table.js\";\r\nimport \"@src/table/tablecontrol.js\";\r\ntextboxcreate(text);\r\nnew tableCreate(text).$mount({ target: document.body });\r\n$(\".next\").attr('href', 'protocols.html');","const text = {\r\n  title: [{ title: \"Notebook\" }],\r\n  text1: [\r\n    {\r\n      subtitle: \"June\",\r\n    },\r\n    {\r\n      ollist: [\r\n        { text: \"Preliminary research.\" },\r\n        { text: \"Discuss about the direction and design of the subject.\" },\r\n      ],\r\n    },\r\n  ],\r\n  text2: [\r\n    {\r\n      subtitle: \"July\",\r\n    },\r\n    {\r\n      ollist: [\r\n        { text: \"Codon optimization model debugging.\" },\r\n        { text: \"Gene synthesis.\" },\r\n        { text: \"Plasmids construction for synthetic pathways.\" },\r\n        {\r\n          text: [\r\n            {\r\n              text: \"Investigation and optimization of culture conditions of \",\r\n            },\r\n            { em: \"Vibrio natriegens. \" },\r\n          ],\r\n        },\r\n        {\r\n          text: \"Preparation and Transformation of chemically competent cells.\",\r\n        },\r\n        { text: \"Colony PCR to check the result of transformation.\" },\r\n      ],\r\n    },\r\n  ],\r\n  text3: [\r\n    { subtitle: \"August\" },\r\n    {\r\n      ollist: [\r\n        { text: \"Preparation of electrocompetent cells and Electroporation.\" },\r\n        {\r\n          text: [\r\n            { text: \"Electroporation of the \" },\r\n            { em: \"Vibrio natriegens.\" },\r\n          ],\r\n        },\r\n        { text: \"Colony PCR to check the result of transformation.\" },\r\n        { text: \"Mutation library construction.\" },\r\n      ],\r\n    },\r\n  ],\r\n  text4: [\r\n    {\r\n      subtitle: \"September-October\",\r\n    },\r\n    {\r\n      ollist: [\r\n        { text: \"Biosensor Plasmids Construction and validation.\" },\r\n        { text: \"Discuss about the direction and design of the subject.\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\nexport default text;\r\n","import table from \"./table.eft\";\r\nimport tableitem from \"./tableitem.eft\";\r\n// import tablelist from \"./tablelist.json\";\r\n\r\nclass tableCreate {\r\n  constructor() {\r\n    const tableT = new table();\r\n    $(\".textbox-container\")\r\n      .find(\"h1, h2\")\r\n      .each(function () {\r\n        var id = $(this).attr(\"id\");\r\n        if (id) {\r\n          if ($(this).is(\"h1\")) {\r\n            tableT.list.push(\r\n              new tableitem({\r\n                $data: {\r\n                  title: id,\r\n                  dif: \"title\",\r\n                },\r\n                $methods: {\r\n                  scroll({ state }) {\r\n                    var safeTitle = state.$data.title.replace(/ /g, \"\\\\ \");\r\n                    var $target = $(\"#\" + safeTitle);\r\n                    $(\"html, body\").animate(\r\n                      {\r\n                        scrollTop: $target.offset().top,\r\n                      },\r\n                      800\r\n                    );\r\n                  },\r\n                },\r\n              })\r\n            );\r\n          } else if ($(this).is(\"h2\")) {\r\n            tableT.list.push(\r\n              new tableitem({\r\n                $data: {\r\n                  title: id,\r\n                },\r\n                $methods: {\r\n                  scroll({ state }) {\r\n                    var safeTitle = state.$data.title.replace(/ /g, \"\\\\ \");\r\n                    var $target = $(\"#\" + safeTitle);\r\n                    $(\"html, body\").animate(\r\n                      {\r\n                        scrollTop: $target.offset().top,\r\n                      },\r\n                      800\r\n                    );\r\n                  },\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      });\r\n    return tableT;\r\n  }\r\n}\r\n\r\n// class tableCreate {\r\n//   constructor(textlist) {\r\n//     const tableT = new table();\r\n//     for (let [key, value] of Object.entries(textlist)) {\r\n//       if (key !== \"mark\") {\r\n//         value.forEach(function (element) {\r\n//           if (element.title) {\r\n//           }\r\n//           if (element.subtitle) {\r\n//           }\r\n//         });\r\n//       }\r\n//     }\r\n//     return tableT;\r\n//   }\r\n// }\r\nexport default tableCreate;\r\n","\r\nimport \"@src/table/table.css\";\r\n$(document).ready(function () {\r\n  $(document).on(\"scroll\", function () {\r\n    let scrollPosition = $(this).scrollTop();\r\n    let windowHeight = $(window).height();\r\n    $(\".text h1, .text h2\").each(function () {\r\n      let elementOffset = $(this).position().top;\r\n      let elementHeight = $(this).parent(\".text\").outerHeight();\r\n      if (\r\n        scrollPosition >= elementOffset-40 &&\r\n        scrollPosition < elementOffset + elementHeight\r\n      ) {\r\n        let id = $(this).attr(\"id\").trim();\r\n        let matchingIndex = $(\".table .table-title\").filter(function () {\r\n          return $(this).text().trim() === id;\r\n        });\r\n        $(\".table .table-title\").removeClass(\"enlarged\");\r\n        matchingIndex.addClass(\"enlarged\");\r\n      }\r\n    });\r\n\r\n    $(\".text\").each(function () {\r\n      let textOffset = $(this).offset().top;\r\n      let textHeight = $(this).outerHeight();\r\n      if (\r\n        textOffset + textHeight < scrollPosition ||\r\n        textOffset > scrollPosition + windowHeight\r\n      ) {\r\n        $(this)\r\n          .find(\"h1, h2\")\r\n          .each(function () {\r\n            let id = $(this).attr(\"id\").trim();\r\n            let matchingIndex = $(\".table .table-title\").filter(function () {\r\n              return $(this).text().trim() === id;\r\n            });\r\n            matchingIndex.removeClass(\"enlarged\");\r\n          });\r\n      }\r\n    });\r\n  });\r\n  $(\".table-title\").hover(\r\n    function () {\r\n      $(this).css(\"color\", \"red\");\r\n    },\r\n    function () {\r\n      $(this).css(\"color\", \"black\");\r\n    }\r\n  );\r\n});\r\n","import { create } from 'ef-core';\nexport default class Table extends create([{t:'div',a:{class:'table-container'}},[{t:'div',a:{class:'table'}},{n:'list',t:1}]]) {\n};\n","import { create } from 'ef-core';\nexport default class Tableitem extends create([{t:'div',a:{class:[['table-title ',''],[['dif']]]},e:[{l:'click',m:'scroll'}]},[['title']]]) {\n};\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}