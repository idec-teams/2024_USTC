{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;ACjDA;AACA;AACA;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA","sources":["webpack://2024_ustc/./src/pages/index/index.js","webpack://2024_ustc/./src/pages/index/indextext.js","webpack://2024_ustc/./src/table/table.js","webpack://2024_ustc/./src/table/tablecontrol.js","webpack://2024_ustc/./src/table/table.eft","webpack://2024_ustc/./src/table/tableitem.eft","webpack://2024_ustc/./src/pages/index/index.css?78e4","webpack://2024_ustc/./src/table/table.css?88f3"],"sourcesContent":["import \"@src/pages/index/index.css\";\r\nimport text from \"@pages/index/indextext.js\";\r\nimport tableCreate from \"@src/table/table.js\";\r\nimport \"@src/table/tablecontrol.js\";\r\nimport textboxcreate from \"@src/textbox/textbox.js\";\r\ntextboxcreate(text);\r\nnew tableCreate(text).$mount({ target: document.body });\r\n$(\"#welcome\").replaceWith('<div id=\"welcome\"><div class=\"scroll-message\">滚动条不在顶部时的文字</div><div class=\"scroll-message\">滚动条不在顶部时的文字</div><div class=\"scroll-message\">滚动条不在顶部时的文字</div></div>');\r\n$(document).ready(function () {\r\n  // 页面初始状态，检查滚动条是否在顶部并设置文字样式\r\n  if ($(window).scrollTop() === 0) {\r\n    $('.scroll-message').removeClass('blur-fade-out').addClass('clear-fade-in');\r\n  } else {\r\n    $('.scroll-message').removeClass('clear-fade-in').addClass('blur-fade-out');\r\n  }\r\n\r\n  // 监听滚动事件\r\n  $(window).on('scroll', function () {\r\n    if ($(window).scrollTop() === 0) {\r\n      // 滚动条在顶部时，文字变为清晰状态\r\n      $('.scroll-message').removeClass('blur-fade-out')\r\n        .addClass('clear-fade-in'); // 添加清晰恢复动画\r\n    } else {\r\n      // 开始滚动，启动模糊消失动画\r\n      $('.scroll-message').removeClass('clear-fade-in')\r\n        .addClass('blur-fade-out'); // 添加模糊消失动画\r\n    }\r\n  });\r\n});\r\n\r\n$(\".next\").attr('href', 'supplementary-information.html');\r\n\r\n","const text = {\r\n  mark: \"welcome\",\r\n  text1: [\r\n    {\r\n      subtitle: \"Abstract\",\r\n      text: \"The synthesis yield of sakuranetin, a compound with extensive medical applications and potential, is constrained by the condensation reaction mediated by chalcone synthase. In recent years, directed evolution has emerged as a promising approach for enhancing protein performance; however, traditional directed evolution techniques encounter challenges in high-throughput screening. By integrating rational design and protein structure analysis, we have modified chalcone synthase and the naringenin sensors TtgR transcriptional repressors. We selected Vibrio natriegens as the host organism due to its superior growth rate and exceptional protein expression capabilities, successfully establishing sensor engineering within this framework. Additionally, codon optimization has been employed to enhance protein expression. This study aims to develop synthetic platforms for naringenin and sakuranetin. Furthermore, we have made preliminary advancements in the development of biosensors capable of endogenous detection, thereby facilitating directed evolution pathways for substances that are difficult to detect, thus highlighting the significant potential of V. natriegens and biosensor technology.\",\r\n    },\r\n  ],\r\n  title3: [{ mark: \"test1\" }],\r\n};\r\nexport default text;\r\n","import table from \"./table.eft\";\r\nimport tableitem from \"./tableitem.eft\";\r\n// import tablelist from \"./tablelist.json\";\r\n\r\nclass tableCreate {\r\n  constructor() {\r\n    const tableT = new table();\r\n    $(\".textbox-container\")\r\n      .find(\"h1, h2\")\r\n      .each(function () {\r\n        var id = $(this).attr(\"id\");\r\n        if (id) {\r\n          if ($(this).is(\"h1\")) {\r\n            tableT.list.push(\r\n              new tableitem({\r\n                $data: {\r\n                  title: id,\r\n                  dif: \"title\",\r\n                },\r\n                $methods: {\r\n                  scroll({ state }) {\r\n                    var safeTitle = state.$data.title.replace(/ /g, \"\\\\ \");\r\n                    var $target = $(\"#\" + safeTitle);\r\n                    $(\"html, body\").animate(\r\n                      {\r\n                        scrollTop: $target.offset().top,\r\n                      },\r\n                      800\r\n                    );\r\n                  },\r\n                },\r\n              })\r\n            );\r\n          } else if ($(this).is(\"h2\")) {\r\n            tableT.list.push(\r\n              new tableitem({\r\n                $data: {\r\n                  title: id,\r\n                },\r\n                $methods: {\r\n                  scroll({ state }) {\r\n                    var safeTitle = state.$data.title.replace(/ /g, \"\\\\ \");\r\n                    var $target = $(\"#\" + safeTitle);\r\n                    $(\"html, body\").animate(\r\n                      {\r\n                        scrollTop: $target.offset().top,\r\n                      },\r\n                      800\r\n                    );\r\n                  },\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      });\r\n    return tableT;\r\n  }\r\n}\r\n\r\n// class tableCreate {\r\n//   constructor(textlist) {\r\n//     const tableT = new table();\r\n//     for (let [key, value] of Object.entries(textlist)) {\r\n//       if (key !== \"mark\") {\r\n//         value.forEach(function (element) {\r\n//           if (element.title) {\r\n//           }\r\n//           if (element.subtitle) {\r\n//           }\r\n//         });\r\n//       }\r\n//     }\r\n//     return tableT;\r\n//   }\r\n// }\r\nexport default tableCreate;\r\n","\r\nimport \"@src/table/table.css\";\r\n$(document).ready(function () {\r\n  $(document).on(\"scroll\", function () {\r\n    let scrollPosition = $(this).scrollTop();\r\n    let windowHeight = $(window).height();\r\n    $(\".text h1, .text h2\").each(function () {\r\n      let elementOffset = $(this).position().top;\r\n      let elementHeight = $(this).parent(\".text\").outerHeight();\r\n      if (\r\n        scrollPosition >= elementOffset-40 &&\r\n        scrollPosition < elementOffset + elementHeight\r\n      ) {\r\n        let id = $(this).attr(\"id\").trim();\r\n        let matchingIndex = $(\".table .table-title\").filter(function () {\r\n          return $(this).text().trim() === id;\r\n        });\r\n        $(\".table .table-title\").removeClass(\"enlarged\");\r\n        matchingIndex.addClass(\"enlarged\");\r\n      }\r\n    });\r\n\r\n    $(\".text\").each(function () {\r\n      let textOffset = $(this).offset().top;\r\n      let textHeight = $(this).outerHeight();\r\n      if (\r\n        textOffset + textHeight < scrollPosition ||\r\n        textOffset > scrollPosition + windowHeight\r\n      ) {\r\n        $(this)\r\n          .find(\"h1, h2\")\r\n          .each(function () {\r\n            let id = $(this).attr(\"id\").trim();\r\n            let matchingIndex = $(\".table .table-title\").filter(function () {\r\n              return $(this).text().trim() === id;\r\n            });\r\n            matchingIndex.removeClass(\"enlarged\");\r\n          });\r\n      }\r\n    });\r\n  });\r\n  $(\".table-title\").hover(\r\n    function () {\r\n      $(this).css(\"color\", \"red\");\r\n    },\r\n    function () {\r\n      $(this).css(\"color\", \"black\");\r\n    }\r\n  );\r\n});\r\n","import { create } from 'ef-core';\nexport default class Table extends create([{t:'div',a:{class:'table-container'}},[{t:'div',a:{class:'table'}},{n:'list',t:1}]]) {\n};\n","import { create } from 'ef-core';\nexport default class Tableitem extends create([{t:'div',a:{class:[['table-title ',''],[['dif']]]},e:[{l:'click',m:'scroll'}]},[['title']]]) {\n};\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}